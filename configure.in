dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/armdis.h)

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

VBA_USE_C_CORE=yes
VBA_USE_MMX=no

case "$target" in
        i?86-*-*)
                VBA_USE_C_CORE=no
                VBA_USE_MMX=yes
                ;;
esac

AM_INIT_AUTOMAKE(VisualBoyAdvance, 1.5)

AC_ARG_ENABLE(gp,
[  --enable-gp             enable GP32 emulation (default is NO)],
ac_cv_use_gp=$enableval, ac_cv_use_gp=no)
AC_CACHE_CHECK(whether to enable GP32 emulation, ac_cv_use_gp, ac_cv_use_gp=no)

AC_ARG_ENABLE(c-core,
[  --enable-c-core         enable C core (default is YES)],
ac_cv_use_c_core=$enableval, ac_cv_use_c_core=$VBA_USE_C_CORE)
AC_CACHE_CHECK(whether to enable C core, ac_cv_use_c_core, ac_cv_use_c_core=$VBA_USE_C_CORE)

AC_ARG_ENABLE(dev,
[  --enable-dev            enable development features (default is YES)],
ac_cv_use_dev=$withval, ac_cv_use_dev=yes)
AC_CACHE_CHECK(whether to enable development features, ac_cv_use_dev, ac_cv_use_dev=no)

AC_ARG_WITH(mmx,
[  --with-mmx              use MMX (default is NO)],
ac_cv_use_mmx=$withval, ac_cv_use_mmx=$VBA_USE_MMX)
AC_CACHE_CHECK(whether to use mmx, ac_cv_use_mmx, ac_cv_use_mmx=$VBA_USE_MMX)

AC_ARG_WITH(profiling,
[  --with-profiling        enable profiling (default is YES)],
ac_cv_use_prof=$withval, ac_cv_use_prof=yes)
AC_CACHE_CHECK(whether to enable profiling, ac_cv_use_prof, ac_cv_use_prof=yes)

PACKAGE=VisualBoyAdvance
VERSION=1.5
CCC="gcc  c++ g++ CC cxx cc++ cl"
dnl Checks for programs.
AC_PROG_CC
AC_PROG_YACC
AM_PROG_LEX
AC_PROG_CXX
AC_PROG_RANLIB
AC_CHECK_TOOL(NASM, nasm)

dnl Check for SDL
SDL_VERSION=1.2.2
AM_PATH_SDL($SDL_VERSION,
            :,
	    AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)
CFLAGS="$CFLAGS $SDL_CFLAGS"
CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

dnl Checks for libraries.
AC_CHECK_LIB(png, png_create_write_struct,,AC_MSG_ERROR(Cannot compile without libpng))
AC_CHECK_LIB(pthread, pthread_yield)
AC_CHECK_LIB(z, gzopen,,AC_MSG_ERROR(Cannot compile without libz))

dnl Checks for header files.
AC_PATH_X
AC_HEADER_STDC
AC_CHECK_HEADERS(malloc.h strings.h unistd.h arpa/inet.h netinet/in.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_MSG_CHECKING(for socklen_t)
AC_TRY_COMPILE([#include <sys/socket.h>
socklen_t x;
],[],[AC_MSG_RESULT(yes)],[
AC_TRY_COMPILE([#include <sys/socket.h>
int accept (int, struct sockaddr *, size_t *);
],[],[
AC_MSG_RESULT(size_t)
AC_DEFINE(socklen_t,size_t)], [
AC_MSG_RESULT(int)
AC_DEFINE(socklen_t,int)])])

AC_C_BIGENDIAN

AC_SUBST(VBA_MMX)
AC_SUBST(VBA_EXTRA)
AC_SUBST(VBA_GP)
AC_SUBST(VBA_PROF)

CXXFLAGS="$CXXFLAGS -DSDL -DBKPT_SUPPORT -fno-exceptions"

if test "${ac_cv_use_c_core}" = "yes"; then
  CXXFLAGS="$CXXFLAGS -DC_CORE"
fi

if test "${ac_cv_use_gp}" = "yes"; then
  VBA_EXTRA="$VBA_EXTRA gp"
  VBA_GP=gp/libgp.a
  CXXFLAGS="$CXXFLAGS -DGP_EMULATION"
fi

if test "${ac_cv_use_mmx}" = "yes"; then
  CXXFLAGS="$CXXFLAGS -DMMX"
  VBA_MMX=i386/lib386.a
  VBA_EXTRA="$VBA_EXTRA i386"
fi

if test "${ac_cv_use_prof}" = "yes"; then
   CXXFLAGS="$CXXFLAGS -DPROFILING"
   VBA_EXTRA="$VBA_EXTRA prof"
fi

if test "${ac_cv_use_dev}" = "yes"; then
  CXXFLAGS="$CXXFLAGS -DDEV_VERSION"
  VBA_PROF=prof/libprof.a
fi

dnl Checks for library functions.

AC_OUTPUT(Makefile win32/Makefile src/Makefile src/gb/Makefile src/gp/Makefile src/i386/Makefile src/prof/Makefile)
